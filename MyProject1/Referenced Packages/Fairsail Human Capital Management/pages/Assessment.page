<apex:page controller="fHCM2.AssessmentController" standardStylesheets="true" showHeader="{!viewer.showSalesforceBanner}" sidebar="false" title="Target" rendered="{!IsAssessor}" action="{!selectUI}">
    <apex:composition template="fHCM2__FairsailTemplate">

        <apex:define name="styleExtra">
            <style><apex:outputText value="{!viewer.departmentPolicy.fHCM2__Style__c}" /></style>
            <apex:includeScript value="{!URLFOR($Resource.fHCM2__jqueryUI, '/js/jquery-1.8.3.min.js')}"/>
            <script>
                jQuery.noConflict();
            	var competencyIds = [
            		<apex:repeat value="{!competencyIds}" var="comp">
            			"{!comp}",
            		</apex:repeat>
            		null
            	];
            	var questionCompetencyIds = [
            		<apex:repeat value="{!questions}" var="question">
            			"{!question.CompetencyId}",
            		</apex:repeat>
            		null
            	];
            	var competencySum;
            	var competencyCount;
            	function StartAverage() {
            		competencySum = {};
            		competencyCount = {};
            		for (var i=0; i<competencyIds.length-1; i++)
            		{
            			competencySum[competencyIds[i]] = 0.0;
            			competencyCount[competencyIds[i]] = 0;
            		}
            	}
            	function ScoreForAverage( quno, score ) {
            		if (score!='' && Number(score)>0) {
            			competencySum[questionCompetencyIds[quno]] += Number(score);
             			competencyCount[questionCompetencyIds[quno]] ++;
            		}
            	}
            	function SetAverages() {
            		var overallSum = 0.0;
            		var overallCount = 0;
            		for (var i=0; i<competencyIds.length-1; i++) {
            			if (competencyCount[competencyIds[i]]>0) {
            				var av = Math.round(competencySum[competencyIds[i]]*10/competencyCount[competencyIds[i]])/10;
            				overallSum += av;
            				overallCount ++;
            				jQuery('.averageCompetency'+competencyIds[i]).text(String(av));
            			} else {
            				jQuery('.averageCompetency'+competencyIds[i]).text('n/a');
            			}
            		}
            		if (overallCount>0) {
            			jQuery('.averageOverall').text(String(Math.round(overallSum*10/overallCount)/10));
            		} else {
           				jQuery('.averageOverall').text('n/a');
            		}
            	}


            </script>
        </apex:define>
    
        <apex:define name="bannerPanel">
            <c:fairsailBanner viewer="{!viewer}" links="{!links}"/>
        </apex:define>

        <apex:define name="thinPanel">
        </apex:define>

        <apex:define name="widePanel">
            <apex:form rendered="{!!IsCompleted}">
                <apex:pageMessages />
                <apex:actionFunction name="saveResponses" action="{!saveResponses}" oncomplete="savePending=false;" immediate="true"/>
                <apex:pageBlock title="{!$Label.fhcm2__ProcessItem_Competency_Assessment}">
                    <apex:pageBlockButtons >
                    	<apex:outputPanel layout="none" rendered="{!layout!='All on one page'}">
	                        <input id="previous" class="btn inputsubmit" type="submit" value="{!$Label.Button_Previous}" onClick="previousQuestion();return false;" />
	                        <input id="next" class="btn inputsubmit" type="submit" value="{!$Label.Button_Next}" onClick="nextQuestion();return false;" />
	                    </apex:outputPanel>
                        <apex:commandButton id="save" action="{!saveAndContinue}" value="{!$Label.fhcm2__Button_Save_And_Continue}" styleClass="inputsubmit" />
                        <apex:commandButton id="complete" action="{!complete}" value="{!$Label.fhcm2__Button_Complete}" styleClass="inputsubmit" onclick="return confirm('{!JSINHTMLENCODE($Label.fhcm2__Global_Freeze_Warning)}');"/>
                       
                    </apex:pageBlockButtons>
					<c:Notice viewer="{!viewer}" page="Assessment" location="Header"/>
                    <apex:pageBlockSection title="{!$Label.fhcm2__Global_Details}" columns="1">
                        <apex:pageBlockSectionItem >
                            <apex:outputLabel value="{!$ObjectType.Competency_Assessment__c.fields.Team_Member__c.label }" for="teamMember" />
                            <c:PersonIcon page="{!links.FairsailProfile}" name="{!viewer.teamMember.Name}" value="{!viewer.teamMember.Id}" picture="{!viewer.teamMember.PictureURL}" />
                        </apex:pageBlockSectionItem>
                    </apex:pageBlockSection>

					<apex:outputPanel rendered="{!layout=='One indicator per page'}">
		            <script type="Text/JavaScript">
						function questionValue(index) {
						    for (var j=0;j<document.forms.length;j++)   {
						        var elements = document.forms[j];
						            for (var i=0;i<elements.length;i++)
						                if (elements[i].id.indexOf('response') >= 0 && isQuestion(elements[i].parentNode,index))
						                {
						                    if (elements[i].id.indexOf('Hidden') >= 0)
						                        return elements[i].value;
						                    else if (elements[i].id.indexOf('DropDown') >= 0)
						                        return elements[i].value;
						                    else if (elements[i].id.indexOf('Radio') >= 0 && elements[i].checked)
						                        return elements[i].value;
						                }
						    }
						    return '';
						}
						function isAnswered(index) {
						    for (var j=0;j<document.forms.length;j++)   {
						        var elements = document.forms[j];
						            for (var i=0;i<elements.length;i++)
						                if (elements[i].id.indexOf('response') >= 0 && isQuestion(elements[i].parentNode,index))
						                {
						                    if (elements[i].id.indexOf('Hidden') >= 0)
						                        return elements[i].value!='';
						                    else if (elements[i].id.indexOf('DropDown') >= 0)
						                        return elements[i].value!='';
						                    else if (elements[i].id.indexOf('Radio') >= 0 && elements[i].checked)
						                        return true;
						                }
						    }
						    return false;
						}
						function hasAnsweredAll() {
						}
						function countQuestions() {
						    var result = 0;
						    var allPageTags=document.getElementsByTagName("span");
						    for (i=0; i<allPageTags.length; i++) {
						        if (allPageTags[i].id.indexOf(':questionPanel')>=0) {
						            result++;
						        } 
						    }
						    return result;
						}
						function isQuestion(element,index) {
						    if (String(element) == 'undefined')
						        return false;
						    else if (element.id.indexOf(':'+String(index)+':questionPanel')>=0)
						        return true;
						    else if (element.id.indexOf(':questionPanel')>=0)
						        return false;
						    else
						        return isQuestion(element.parentNode,index);
						}
						function hideQuestion(index) {
						    var allPageTags=document.getElementsByTagName("span");
						    for (i=0; i<allPageTags.length; i++) {
						        if (allPageTags[i].id.indexOf(':'+String(index)+':questionPanel')>=0) {
						            allPageTags[i].style.display='none';
						        } 
						    }
						}
						var hasChanged = false;
						function showQuestion(index) {
						    var allPageTags=document.getElementsByTagName("span");
						    for (i=0; i<allPageTags.length; i++) {
						        if (allPageTags[i].id.indexOf(':'+String(index)+':questionPanel')>=0) {
						            allPageTags[i].style.display='';
						        } 
						    }
						    showButtons();
						}
						function atEnd() {
						    return (questionNumber==noQuestions-1);
						}
						function atStart() {
						    return (questionNumber==0);
						}
						function previousQuestion() {
						    if (!atStart())
						    {
						        hideQuestion(questionNumber--);
						        showQuestion(questionNumber);
						        if (hasChanged) doSaveResponses();
						        hasChanged = false;
						    }
						}
						function nextQuestion() {
						    if (!atEnd())
						    {
						        hideQuestion(questionNumber++);
						        showQuestion(questionNumber);
						        if (hasChanged) doSaveResponses();
						        hasChanged = false;
						    }
						}
						var hasAnsweredAll = false;
						function calculateAverages() {
							StartAverage();
							for (var i=0;i<noQuestions;i++) {
								ScoreForAverage( i, questionValue(i) );
							}
							SetAverages();
						}
						function showButtons() {
						    calculateAverages();
						    if (atStart()) {
						        disable('previous');
						    } else {
						        enable('previous');
						    }
						    if (atEnd()) {
						        disable('next');
						        hasAnsweredAll = isAnswered(questionNumber);
						    } else {
						        if (isAnswered(questionNumber)) enable('next'); else disable('next');
						    }
						    if (hasAnsweredAll) enable('complete'); else disable('complete');
						}
						var savePending = false;
						var saveQueued = false;
						var queue;
						function doSaveResponses() {
						    if (savePending) {
						        if (!saveQueued) {
						            saveQueued = true;
						            queue = setTimeout("saveQueued = false; doSaveResponses();",1000);
						        }
						    } else {
						        if (saveQueued) clearTimeout(queue);
						        saveQueued = false;
						        savePending = true;
						        saveResponses();
						    }
						}
					</script>
                    <apex:repeat value="{!questions}" var="question" id="questionRepeat2" >
                        <apex:outputPanel style="display:none;" id="questionPanel">
                            <apex:pageBlockSection title="{!question.abovePrompt}" columns="1">
                                <apex:pageBlockSectionItem >
                                    <apex:outputLabel value="{!$Label.ProcessItem_Indicator }" />
                                    <apex:outputText >
                                        <div style="clear:none;float:left;width:100px">
                                        	<apex:outputText style="font-style:italic" value="{!$Label.fhcm2__Global_I_Of_N}">
												<apex:param value="{!question.questionNumber}"/>
												<apex:param value="{!noQuestions}"/>
											</apex:outputText>
                                        </div>
                                        <script type="Text/JavaScript">PercentageIndicator({!question.questionNumber},{!noQuestions});</script>
                                    </apex:outputText>
                                </apex:pageBlockSectionItem>
                                <apex:pageBlockSectionItem rendered="{!question.competency!=''}">
                                    <apex:outputLabel value="{!$Label.ProcessItem_Competency }" />
                                    <apex:outputPanel ><apex:outputText value="{!question.competency}" style="font-weight:bold;"/><apex:outputLabel rendered="{!showAverageScore}"> {!$Label.Global_Average}:&nbsp;<span class="averageCompetency{!question.competencyId}"></span>. {!$Label.fhcm2__Process_Competency_Assessment_All_Average}:&nbsp;<span class="averageOverall"></span></apex:outputLabel></apex:outputPanel>
                                </apex:pageBlockSectionItem>
                                <apex:pageBlockSectionItem rendered="{!question.competency!='' && question.agreedAction!='' && viewer.departmentPolicy.fHCM2__Show_Last_Development_Action__c}">
                                    <apex:outputLabel value="{!$ObjectType.fHCM2__Development_Need__c.fields.fHCM2__Agreed_Action__c.label}" />
                                    <apex:outputText value="{!question.agreedAction}" />
                                </apex:pageBlockSectionItem>
                                <apex:pageBlockSectionItem rendered="{!question.competency!='' && question.progress!='' && viewer.departmentPolicy.fHCM2__Show_Last_Development_Action__c}">
                                    <apex:outputLabel value="{!$ObjectType.fHCM2__Development_Need__c.fields.fHCM2__Progress__c.label}" />
                                    <apex:outputText value="{!question.progress}" />
                                </apex:pageBlockSectionItem>
                                <apex:pageBlockSectionItem rendered="{!question.indicator!='' && question.competency!=question.indicator}">
                                    <apex:outputLabel value="{!$Label.ProcessItem_Indicator }" />
                                    <apex:outputText value="{!question.indicator}" style="font-weight:bold;"/>
                                </apex:pageBlockSectionItem>
                                <apex:pageBlockSectionItem rendered="{!and(question.hasScale,question.format='Vertical Radio Buttons')}">
                                    <apex:outputLabel value="{!question.prompt}" />
                                    <apex:selectRadio id="responseVerticalRadio" value="{!question.score}" layout="pageDirection" onClick="showButtons()" onkeydown="showButtons()" onchange="hasChanged=true; showButtons()" ondblclick="nextQuestion()">
                                        <apex:selectOptions value="{!question.scale}" />
                                    </apex:selectRadio>
                                </apex:pageBlockSectionItem>
                                
                                <apex:pageBlockSectionItem rendered="{!and(question.hasScale,question.format='Slider Bar Scale')}">
                                    <apex:outputLabel value="{!question.prompt}" />
                                    <c:SliderSelector scale="{!question.scale}" sliderId="{!question.Id}" indicatorDescriptions="{!question.indicatorDescriptions}" onchange="hasChanged=true; showButtons();" score="{!question.score}">
                                        <apex:inputHidden value="{!question.score}" id="responseDropDown"/>
                                    </c:SliderSelector>
                                </apex:pageBlockSectionItem>
                                
                                <apex:pageBlockSectionItem rendered="{!and(question.hasScale,question.format='Horizontal Radio Buttons')}">
                                    <apex:outputLabel value="{!question.prompt}" />
                                    <apex:selectRadio id="responseHorizontalRadio" value="{!question.score}" layout="lineDirection" onClick="showButtons()" onkeydown="showButtons()" onchange="hasChanged=true; showButtons()" ondblclick="nextQuestion()">
                                        <apex:selectOptions value="{!question.scale}" />
                                    </apex:selectRadio>
                                </apex:pageBlockSectionItem>
                                <apex:pageBlockSectionItem rendered="{!and(question.hasScale,question.format='Drop Down Menu')}">
                                    <apex:outputLabel value="{!question.prompt}" />
                                    <apex:selectList id="responseDropDown" value="{!question.score}" size="1" onClick="showButtons()" onSelect="showButtons()" onchange="hasChanged=true; showButtons()" ondblclick="nextQuestion()">
                                        <apex:selectOptions value="{!question.scale}" />
                                    </apex:selectList>
                                </apex:pageBlockSectionItem>
                                <apex:inputHidden id="responseHidden" value="{!question.score}" rendered="{!!question.hasScale}" />
                                <apex:pageBlockSectionItem rendered="{!question.hasComments}">
                                    <apex:outputLabel value="{!question.commentPrompt}" />
                                    <apex:inputTextarea id="comment" onChange="hasChanged=true;" value="{!question.comment}" />
                                </apex:pageBlockSectionItem>
                                <apex:pageBlockSectionItem rendered="{!question.hasStrengths}">
                                    <apex:outputLabel value="{!question.strengthPrompt}" />
                                    <apex:inputTextarea id="strength" onChange="hasChanged=true;" value="{!question.strength}" />
                                </apex:pageBlockSectionItem>
                                <apex:pageBlockSectionItem rendered="{!question.hasDevelopmentNeeds}">
                                    <apex:outputLabel value="{!question.developmentNeedPrompt}" />
                                    <apex:inputTextarea id="developmentNeed" onChange="hasChanged=true;" value="{!question.developmentNeed}" />
                                </apex:pageBlockSectionItem>
                            </apex:pageBlockSection>
                            <p>{!question.belowPrompt}</p>
                        </apex:outputPanel>
                    </apex:repeat>
                    </apex:outputPanel>

					<apex:outputPanel rendered="{!layout=='All on one page'}">
			            <script type="Text/JavaScript">
						function calculateAverages() {
							StartAverage();
							var i=0;
							jQuery('.potentialQuestion').each(
							    function(){
							    	var val = '';
							    	if (jQuery(this).find('input:radio').size()>0)
							    		val = jQuery(this).find('input:radio:checked').val();
							    	else if (jQuery(this).is('select'))
							    		val = jQuery(this).val();
							    	else if (jQuery(this).find('input:hidden').size()>0)
							    		val = jQuery(this).find('input:hidden').val();
									ScoreForAverage( i++, val );
								}
							);
							SetAverages();
						}
						function showButtons() {
							var complete = true;
							jQuery('.requiredQuestion').each(
							    function(){
							    	if (jQuery(this).find('input:radio').size()>0)
							    		val = jQuery(this).find('input').is(':checked');
							    	else if (jQuery(this).is('select'))
							    		val = jQuery(this).val()!='';
							    	else if (jQuery(this).find('input:hidden').size()>0)
							    		val = jQuery(this).find('input:hidden').val()!='';
									if (!val) complete = false;
								}
							);
							if (complete) enable('complete'); else disable('complete');
							calculateAverages();
						}
			            </script>
                        <apex:pageBlockSection title="{!if(questions.size>0,questions[0].abovePrompt,'')}" columns="1">
                        	<apex:variable var="lastCompetency" value="''"/>
	                    	<apex:repeat value="{!questions}" var="question" id="questionRepeat">
                                <apex:pageBlockSectionItem rendered="{!question.competency!='' && question.competency!=lastCompetency}">
                                    <apex:outputLabel value="{!$Label.ProcessItem_Competency }" />
                                    <apex:outputPanel ><apex:outputText value="{!question.competency}" style="font-weight:bold;"/><apex:outputpanel rendered="{!showAverageScore}"> {!$Label.Global_Average}:&nbsp;<span class="averageCompetency{!question.competencyId}"></span></apex:outputpanel></apex:outputPanel>
                                </apex:pageBlockSectionItem>
                                <apex:pageBlockSectionItem rendered="{!question.competency!='' && question.competency!=lastCompetency && question.agreedAction!='' && viewer.departmentPolicy.fHCM2__Show_Last_Development_Action__c}">
                                    <apex:outputLabel value="{!$ObjectType.fHCM2__Development_Need__c.fields.fHCM2__Agreed_Action__c.label}" />
                                    <apex:outputText value="{!question.agreedAction}" />
                                </apex:pageBlockSectionItem>
                                <apex:pageBlockSectionItem rendered="{!question.competency!='' && question.competency!=lastCompetency && question.progress!='' && viewer.departmentPolicy.fHCM2__Show_Last_Development_Action__c}">
                                    <apex:outputLabel value="{!$ObjectType.fHCM2__Development_Need__c.fields.fHCM2__Progress__c.label}" />
                                    <apex:outputText value="{!question.progress}" />
                                </apex:pageBlockSectionItem>
                                <apex:pageBlockSectionItem rendered="{!question.indicator!='' && question.competency!=question.indicator}">
                                    <apex:outputLabel value="{!$Label.ProcessItem_Indicator }" />
                                    <apex:outputText value="{!question.indicator}" style="font-weight:bold;"/>
                                </apex:pageBlockSectionItem>
                                <apex:pageBlockSectionItem rendered="{!and(question.hasScale,question.format='Vertical Radio Buttons')}">
                                    <apex:outputLabel value="{!question.prompt}" />
                                    <apex:selectRadio styleclass="{!if(question.permitNoResponse,'','requiredQuestion')} potentialQuestion" value="{!question.score}" layout="pageDirection" onClick="showButtons()" onkeydown="showButtons()" onchange="showButtons()">
                                        <apex:selectOptions value="{!question.scale}" />
                                    </apex:selectRadio>
                                </apex:pageBlockSectionItem>
                                
                                <apex:pageBlockSectionItem id="questionPanelSBS" rendered="{!and(question.hasScale,question.format='Slider Bar Scale')}">
                                    <apex:outputLabel value="{!question.prompt}" />
                                    <apex:outputPanel styleclass="{!if(question.permitNoResponse,'','requiredQuestion')} potentialQuestion">
                                    <c:SliderSelector scale="{!question.scale}" sliderId="{!question.Id}" indicatorDescriptions="{!question.indicatorDescriptions}" onchange="showButtons();" score="{!question.score}">
                                        <apex:inputHidden value="{!question.score}" id="responseDropDown"/>
                                    </c:SliderSelector>
                                    </apex:outputPanel>
                                </apex:pageBlockSectionItem>
                                
                                <apex:pageBlockSectionItem rendered="{!and(question.hasScale,question.format='Horizontal Radio Buttons')}" >
                                    <apex:outputLabel value="{!question.prompt}" />
                                    <apex:selectRadio styleclass="{!if(question.permitNoResponse,'','requiredQuestion')} potentialQuestion" id="responseHorizontalRadio" value="{!question.score}" layout="lineDirection" onClick="showButtons()" onkeydown="showButtons()" onchange="showButtons()">
                                        <apex:selectOptions value="{!question.scale}" />
                                    </apex:selectRadio>
                                </apex:pageBlockSectionItem>
                                <apex:pageBlockSectionItem rendered="{!and(question.hasScale,question.format='Drop Down Menu')}">
                                    <apex:outputLabel value="{!question.prompt}" />
                                    <apex:selectList styleclass="{!if(question.permitNoResponse,'','requiredQuestion')} potentialQuestion" id="responseDropDown" value="{!question.score}" size="1" onClick="showButtons()" onSelect="showButtons()" onchange="showButtons()">
                                        <apex:selectOptions value="{!question.scale}" />
                                    </apex:selectList>
                                </apex:pageBlockSectionItem>
                                <apex:inputHidden id="responseHidden" value="{!question.score}" rendered="{!!question.hasScale}" />
                                <apex:pageBlockSectionItem rendered="{!question.hasComments}">
                                    <apex:outputLabel value="{!question.commentPrompt}" />
                                    <apex:inputTextarea id="comment" value="{!question.comment}" />
                                </apex:pageBlockSectionItem>
                                <apex:variable var="lastCompetency" value="{!question.competency}"/>
                                <apex:pageBlockSectionItem rendered="{!question.hasStrengths}">
                                    <apex:outputLabel value="{!question.strengthPrompt}" />
                                    <apex:inputTextarea id="strength" value="{!question.strength}" />
                                </apex:pageBlockSectionItem>
                                <apex:pageBlockSectionItem rendered="{!question.hasDevelopmentNeeds}">
                                    <apex:outputLabel value="{!question.developmentNeedPrompt}" />
                                    <apex:inputTextarea id="developmentNeed" value="{!question.developmentNeed}" />
                                </apex:pageBlockSectionItem>
	                    	</apex:repeat>
                             <apex:pageBlockSectionItem rendered="{!showAverageScore}">
                                 <apex:outputLabel value="{!$Label.fhcm2__Process_Competency_Assessment_All_Average}" />
                                 <apex:outputPanel ><span class="averageOverall"></span></apex:outputPanel>
                             </apex:pageBlockSectionItem>
                         </apex:pageBlockSection>
                        <p>{!questions[0].belowPrompt}</p>
                    </apex:outputPanel>


					<apex:outputPanel rendered="{!layout=='One competency per page'}">
		            <script type="Text/JavaScript">
		            	var currentIndex = 0;
		            	function setPage(page) {
		            		for (var i=0;i<competencyIds.length-1;i++)
								jQuery(".competency"+competencyIds[i]).hide();
							jQuery(".competency"+competencyIds[page]).show();
							showButtons();
		            	}
						function previousQuestion() {
							if (currentIndex>0) {
								setPage(--currentIndex);
							}
					        if (hasChanged) doSaveResponses();
					        hasChanged = false;
						}
						function nextQuestion() {
							if (currentIndex<competencyIds.length-2) {
								setPage(++currentIndex);
							}
					        if (hasChanged) doSaveResponses();
					        hasChanged = false;
						}
						function hasDonePage(page) {
								var completePage = true;
								jQuery('.competency'+competencyIds[currentIndex]+' .requiredQuestion').each(
								    function(){
								    	if (jQuery(this).find('input:radio').size()>0)
								    		val = jQuery(this).find('input').is(':checked');
								    	else if (jQuery(this).is('select'))
								    		val = jQuery(this).val()!='';
								    	else if (jQuery(this).find('input:hidden').size()>0)
								    		val = jQuery(this).find('input:hidden').val()!='';
										if (!val) completePage = false;
									}
								);
								return completePage;
						}
						function hasPotentialPage(page) {
								var completePage = true;
								jQuery('.competency'+competencyIds[currentIndex]+' .potentialQuestion').each(
								    function(){
								    	if (jQuery(this).find('input:radio').size()>0)
								    		val = jQuery(this).find('input').is(':checked');
								    	else if (jQuery(this).is('select'))
								    		val = jQuery(this).val()!='';
								    	else if (jQuery(this).find('input:hidden').size()>0)
								    		val = jQuery(this).find('input:hidden').val()!='';
										if (!val) completePage = false;
									}
								);
								return !completePage;
						}
						function showButtons() {
							var complete = true;
							if (currentIndex>0) enable('previous'); else disable('previous');
							if (currentIndex<competencyIds.length-2 && hasDonePage(currentIndex)) enable('next'); else disable('next');
							jQuery('.requiredQuestion').each(
							    function(){
							    	if (jQuery(this).find('input:radio').size()>0)
							    		val = jQuery(this).find('input').is(':checked');
							    	else if (jQuery(this).is('select'))
							    		val = jQuery(this).val()!='';
							    	else if (jQuery(this).find('input:hidden').size()>0)
							    		val = jQuery(this).find('input:hidden').val()!='';
									if (!val) complete = false;
								}
							);
							if (complete) enable('complete'); else disable('complete');
							calculateAverages();
						}
						function calculateAverages() {
							StartAverage();
							var i=0;
							jQuery('.potentialQuestion').each(
							    function(){
							    	var val = '';
							    	if (jQuery(this).find('input:radio').size()>0)
							    		val = jQuery(this).find('input:radio:checked').val();
							    	else if (jQuery(this).is('select'))
							    		val = jQuery(this).val();
							    	else if (jQuery(this).find('input:hidden').size()>0)
							    		val = jQuery(this).find('input:hidden').val();
									ScoreForAverage( i++, val );
								}
							);
							SetAverages();
						}
		            	var hasChanged=false;
						var savePending = false;
						var saveQueued = false;
						var queue;
						function doSaveResponses() {
						    if (savePending) {
						        if (!saveQueued) {
						            saveQueued = true;
						            queue = setTimeout("saveQueued = false; doSaveResponses();",1000);
						        }
						    } else {
						        if (saveQueued) clearTimeout(queue);
						        saveQueued = false;
						        savePending = true;
						        saveResponses();
						    }
						}
					</script>
                   	<apex:variable var="lastCompetency" value="''"/>
                            <apex:pageBlockSection title="{!if(questions.size>0,questions[0].abovePrompt,'')}" columns="1">
                            <apex:outputPanel >
                    <apex:repeat value="{!questions}" var="question" id="questionRepeat">
                    		<apex:outputPanel styleClass="competency{!question.competencyId}">
                            <apex:pageBlockSection columns="1">
                                <apex:pageBlockSectionItem rendered="{!question.competency!='' && question.competency!=lastCompetency}">
                                    <apex:outputLabel value="{!$Label.ProcessItem_Competency }" />
                                    <apex:outputText >
                                        <div style="clear:none;float:left;width:100px">
                                        	<apex:outputText style="font-style:italic" value="{!$Label.fhcm2__Global_I_Of_N}">
												<apex:param value="{!question.competencyNumber}"/>
												<apex:param value="{!competencyIds.size}"/>
											</apex:outputText>
                                        </div>
                                        <script type="Text/JavaScript">PercentageIndicator({!question.questionNumber},{!noQuestions});</script>
                                    </apex:outputText>
                                </apex:pageBlockSectionItem>
                                <apex:pageBlockSectionItem rendered="{!question.competency!='' && question.competency!=lastCompetency}" >
                                    <apex:outputLabel value="{!$Label.ProcessItem_Competency }" />
                                    <apex:outputPanel ><apex:outputText value="{!question.competency}" style="font-weight:bold;"/><apex:outputLabel rendered="{!showAverageScore}"> {!$Label.Global_Average}:&nbsp;<span class="averageCompetency{!question.competencyId}"></span>. {!$Label.fhcm2__Process_Competency_Assessment_All_Average}:&nbsp;<span class="averageOverall"></span></apex:outputLabel></apex:outputPanel>
                                </apex:pageBlockSectionItem>
                                <apex:pageBlockSectionItem rendered="{!question.competency!='' && question.competency!=lastCompetency && question.agreedAction!='' && viewer.departmentPolicy.fHCM2__Show_Last_Development_Action__c}">
                                    <apex:outputLabel value="{!$ObjectType.fHCM2__Development_Need__c.fields.fHCM2__Agreed_Action__c.label}" />
                                    <apex:outputText value="{!question.agreedAction}" />
                                </apex:pageBlockSectionItem>
                                <apex:pageBlockSectionItem rendered="{!question.competency!='' && question.competency!=lastCompetency && question.progress!='' && viewer.departmentPolicy.fHCM2__Show_Last_Development_Action__c}">
                                    <apex:outputLabel value="{!$ObjectType.fHCM2__Development_Need__c.fields.fHCM2__Progress__c.label}" />
                                    <apex:outputText value="{!question.progress}" />
                                </apex:pageBlockSectionItem>
                                <apex:pageBlockSectionItem rendered="{!question.indicator!='' && question.competency!=question.indicator}" >
                                    <apex:outputLabel value="{!$Label.ProcessItem_Indicator }" />
                                    <apex:outputText value="{!question.indicator}" style="font-weight:bold;"/>
                                </apex:pageBlockSectionItem>
                                <apex:pageBlockSectionItem rendered="{!and(question.hasScale,question.format='Vertical Radio Buttons')}" >
                                    <apex:outputLabel value="{!question.prompt}" />
                                    <apex:selectRadio styleclass="{!if(question.permitNoResponse,'','requiredQuestion')} potentialQuestion" id="responseVerticalRadio" value="{!question.score}" layout="pageDirection" onClick="showButtons()" onkeydown="showButtons()" onchange="hasChanged=true; showButtons()" >
                                        <apex:selectOptions value="{!question.scale}" />
                                    </apex:selectRadio>
                                </apex:pageBlockSectionItem>
                                
                                <apex:pageBlockSectionItem rendered="{!and(question.hasScale,question.format='Slider Bar Scale')}" >
                                    <apex:outputLabel value="{!question.prompt}" />
                                    <apex:outputPanel styleclass="{!if(question.permitNoResponse,'','requiredQuestion')} potentialQuestion">
                                    <c:SliderSelector scale="{!question.scale}" sliderId="{!question.Id}" indicatorDescriptions="{!question.indicatorDescriptions}" onchange="hasChanged=true; showButtons();" score="{!question.score}">
                                        <apex:inputHidden value="{!question.score}" id="responseDropDown"/>
                                    </c:SliderSelector>
                                    </apex:outputPanel>
                                </apex:pageBlockSectionItem>
                                
                                <apex:pageBlockSectionItem rendered="{!and(question.hasScale,question.format='Horizontal Radio Buttons')}" >
                                    <apex:outputLabel value="{!question.prompt}" />
                                    <apex:selectRadio styleclass="{!if(question.permitNoResponse,'','requiredQuestion')} potentialQuestion" id="responseHorizontalRadio" value="{!question.score}" layout="lineDirection" onClick="showButtons()" onkeydown="showButtons()" onchange="hasChanged=true; showButtons()">
                                        <apex:selectOptions value="{!question.scale}" />
                                    </apex:selectRadio>
                                </apex:pageBlockSectionItem>
                                <apex:pageBlockSectionItem rendered="{!and(question.hasScale,question.format='Drop Down Menu')}" >
                                    <apex:outputLabel value="{!question.prompt}" />
                                    <apex:selectList styleclass="{!if(question.permitNoResponse,'','requiredQuestion')} potentialQuestion" id="responseDropDown" value="{!question.score}" size="1" onClick="showButtons()" onSelect="showButtons()" onchange="hasChanged=true; showButtons()">
                                        <apex:selectOptions value="{!question.scale}" />
                                    </apex:selectList>
                                </apex:pageBlockSectionItem>
                                <apex:inputHidden id="responseHidden" value="{!question.score}" rendered="{!!question.hasScale}" />
                                <apex:pageBlockSectionItem rendered="{!question.hasComments}" >
                                    <apex:outputLabel value="{!question.commentPrompt}" />
                                    <apex:inputTextarea id="comment" onChange="hasChanged=true;" value="{!question.comment}" />
                                </apex:pageBlockSectionItem>
                                <apex:pageBlockSectionItem rendered="{!question.hasStrengths}" >
                                    <apex:outputLabel value="{!question.strengthPrompt}" />
                                    <apex:inputTextarea id="strength" onChange="hasChanged=true;" value="{!question.strength}" />
                                </apex:pageBlockSectionItem>
                                <apex:pageBlockSectionItem rendered="{!question.hasDevelopmentNeeds}" >
                                    <apex:outputLabel value="{!question.developmentNeedPrompt}" />
                                    <apex:inputTextarea id="developmentNeed" onChange="hasChanged=true;" value="{!question.developmentNeed}" />
                                </apex:pageBlockSectionItem>
                            </apex:pageBlockSection>
                         </apex:outputPanel>
                         <apex:variable var="lastCompetency" value="{!question.competency}"/>
                    </apex:repeat>
					</apex:outputPanel>
                            </apex:pageBlockSection>
                            <p>{!questions[0].belowPrompt}</p>
                    </apex:outputPanel>
					<c:Notice viewer="{!viewer}" page="Assessment" location="Footer"/>
                </apex:pageBlock>
            </apex:form>

         	<apex:outputPanel layout="none" rendered="{!layout=='One indicator per page'}">
            <script type="Text/JavaScript">
						var questionNumber=0;
						var noQuestions=countQuestions();
						for (questionNumber=0; questionNumber<noQuestions-1; questionNumber++)
						    if (!isAnswered(questionNumber))
						        break;
						showQuestion(questionNumber);
			</script>
			</apex:outputPanel>
         	<apex:outputPanel layout="none" rendered="{!layout=='All on one page'}">
            <script type="Text/JavaScript">
						showButtons();
			</script>
			</apex:outputPanel>
         	<apex:outputPanel layout="none" rendered="{!layout=='One competency per page'}">
            <script type="Text/JavaScript">
            	for (currentIndex=0;currentIndex<competencyIds.length-2;currentIndex++) {
            		if (hasPotentialPage(currentIndex))
            			break;
            	}
            	setPage(currentIndex);
			</script>
			</apex:outputPanel>
        </apex:define>
    </apex:composition>
</apex:page>